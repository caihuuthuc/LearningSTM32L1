# Define processor type flag
PTYPE 		= 	STM32L152xE

# GNU ARM Toolchain path
TOOLROOT	= 	/usr/bin

CC		=	$(TOOLROOT)/arm-none-eabi-gcc
LD		=	$(TOOLROOT)/arm-none-eabi-gcc

OBJCOPY		=	$(TOOLROOT)/arm-none-eabi-objcopy

# ST-Utils path
STLINK		=	/usr/bin

# STM32L1xx headers paths
CMSIS_ROOT	=	/mnt/d/embedded/CMSIS

DEVICE		=	$(CMSIS_ROOT)/Device/ST/STM32L1

DEVICE_INC	=	$(DEVICE)/Include
CORE_INC	=	$(CMSIS_ROOT)/CMSIS/Core/Include

# Compilation Flags
FULLASSERT 	= 	-DUSE_FULL_ASSERT 

ASFLAGS		=	-g

LDFLAGS 	= 	-T$(TEMPLATEROOT)/stm32l152retx.ld -Llib --specs=nosys.specs
CFLAGS 		= 	-g -O1 -c -fno-common -mcpu=cortex-m3 -mthumb --specs=nosys.specs -nostdlib
CPPFLAGS 	= 	-D$(PTYPE) $(FULLASSERT)-I$(TEMPLATEROOT) -I$(DEVICE_INC) -I$(CORE_INC) -I. 

# Search Processor specific file 
vpath 		system_stm32l1xx.c 		$(DEVICE)/Source/Templates
vpath 		startup_stm32l152xe.s 	$(DEVICE)/Source/Templates/gcc

# compile and generate dependency info
%.o: %.c
	$(CC) -MM $(CFLAGS) $(CPPFLAGS) $< > $*.d
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@

%.o: %.s
	$(CC) -c $(CFLAGS) $< -o $@

.PHONY: proj lib

all: proj lib

lib: 

proj: $(PROJ_NAME).elf $(PROJ_NAME).bin $(PROJ_NAME).hex
 
$(PROJ_NAME).elf : main.o startup_stm32l152xe.o system_stm32l1xx.o $OTHERS_FILES
	$(LD) $(LDFLAGS) $(LDLIBS) $^ -o $@
# $(LD) $(LDFLAGS) $(LDLIBS) main.o startup_stm32l152xe.o system_stm32l1xx.o -o $@

$(PROJ_NAME).bin: $(PROJ_NAME).elf
	$(OBJCOPY) -O binary $< $@

$(PROJ_NAME).hex: $(PROJ_NAME).elf
	$(OBJCOPY) -O ihex $< $@

clean:
	rm -f *.o 
	rm -f *.d
	rm -f $(PROJ_NAME).elf
	rm -f $(PROJ_NAME).hex
	rm -f $(PROJ_NAME).bin

# Flash the NUCLEO-STM32L152RE
flash-to-st: proj
	$(STLINK)/st-flash reset
	$(STLINK)/st-flash write $(PROJ_NAME).bin 0x08000000