# Define processor type flag
PTYPE = STM32L152xE

# GNU ARM Toolchain path

TOOLROOT = /usr/bin# Path to folder containing GNU ARM Toolchain 

CC=$(TOOLROOT)/arm-none-eabi-gcc
LD=$(TOOLROOT)/arm-none-eabi-gcc
AR=$(TOOLROOT)/arm-none-eabi-ar
AS=$(TOOLROOT)/arm-none-eabi-as
GDB=$(TOOLROOT)/arm-none-eabi-gdb

# STM32L1xx headers paths
STM_LIBROOT=/mnt/d/embedded/STM32CubeL1

CMSIS_ROOT=$(STM_LIBROOT)/Drivers/CMSIS
DEVICE=$(CMSIS_ROOT)/Device/ST/STM32L1xx

DEVICE_INC=$(DEVICE)/Include
CORE_INC=$(CMSIS_ROOT)/Core/Include

# Search system_stm32l1xx.c file 
vpath system_stm32l1xx.c $(DEVICE)/Source/Templates

# Search startup_stm32l152xe.s 
vpath startup_stm32l152xe.s $(DEVICE)/Source/Templates/gcc

# Search file system_stm32l1xx.c
vpath %.c $(DEVICE)/Source/Templates

#  Processor specific

LDSCRIPT = $(TEMPLATEROOT)/stm32l152retx.ld
STARTUP= startup_stm32l152xe.o system_stm32l1xx.o 

# Compilation Flags

FULLASSERT = -DUSE_FULL_ASSERT 

LDFLAGS+= -T$(LDSCRIPT) -mthumb -mcpu=cortex-m3 --specs=nosys.specs
CFLAGS+= -mcpu=cortex-m3 -mthumb --specs=nosys.specs
CFLAGS+= -I$(TEMPLATEROOT) -I$(DEVICE_INC) -I$(CORE_INC) -I.
CFLAGS+= -D$(PTYPE) $(FULLASSERT)#-DUSE_STDPERIPH_DRIVER=1


# Build executable 
$(ELF) :  $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS)

# compile and generate dependency info

%.o: %.c
	$(CC) -c $(CFLAGS) $< -o $@
	$(CC) -MM $(CFLAGS) $< > $*.d

%.o: %.s
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -f $(OBJS) $(OBJS:.o=.d) $(ELF) startup_stm32l* $(CLEANOTHER)

debug: $(ELF)
	$(GDB) $(ELF)


# pull in dependencies

-include $(OBJS:.o=.d)