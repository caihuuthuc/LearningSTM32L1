# Define processor type flag
PTYPE = STM32L152xE

# GNU ARM Toolchain path
TOOLROOT = /usr/bin

CC=$(TOOLROOT)/arm-none-eabi-gcc
LD=$(TOOLROOT)/arm-none-eabi-gcc

OBJCOPY=$(TOOLROOT)/arm-none-eabi-objcopy

# ST-Utils path
STLINK=/usr/bin

# STM32L1xx headers paths
STM_LIBROOT=/mnt/d/embedded/STM32CubeL1

CMSIS_ROOT=$(STM_LIBROOT)/Drivers/CMSIS
DEVICE=$(CMSIS_ROOT)/Device/ST/STM32L1xx

DEVICE_INC=$(DEVICE)/Include
CORE_INC=$(CMSIS_ROOT)/Core/Include

# Search Processor specific file 
vpath system_stm32l1xx.c $(DEVICE)/Source/Templates
vpath startup_stm32l152xe.s $(DEVICE)/Source/Templates/gcc

STARTUP = startup_stm32l152xe.o system_stm32l1xx.o 

# Compilation Flags
FULLASSERT = -DUSE_FULL_ASSERT 

LDFLAGS+= -T$(TEMPLATEROOT)/stm32l152retx.ld -mthumb -mcpu=cortex-m3 --specs=nosys.specs
CFLAGS+= -mcpu=cortex-m3 -mthumb --specs=nosys.specs
CFLAGS+= -I$(TEMPLATEROOT) -I$(DEVICE_INC) -I$(CORE_INC) -I.
CFLAGS+= -D$(PTYPE) $(FULLASSERT)#-DUSE_STDPERIPH_DRIVER=1

.PHONY: proj

all: proj

proj: $(PROJ_NAME).elf

$(PROJ_NAME).elf :  $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS)
	$(OBJCOPY) -O ihex $@ $(PROJ_NAME).hex
	$(OBJCOPY) -O binary $@ $(PROJ_NAME).bin

# compile and generate dependency info

%.o: %.c
	$(CC) -c $(CFLAGS) $< -o $@
	$(CC) -MM $(CFLAGS) $< > $*.d

%.o: %.s
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -f *.o 
	rm -f *.d
	rm -f $(PROJ_NAME).elf
	rm -f $(PROJ_NAME).hex
	rm -f $(PROJ_NAME).bin

# Flash the NUCLEO-STM32L152RE
flash-to-st: proj
	$(STLINK)/st-flash reset
	$(STLINK)/st-flash write $(PROJ_NAME).bin 0x08000000